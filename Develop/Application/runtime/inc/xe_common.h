/****************************************************************************
*文 件 说 明: 小二充电公共接口的头文件
*版    本：V1.0
*时    间：2016年12月07日
*****************************************************************************
*/
#ifndef __XE_COMMON_H__
#define __XE_COMMON_H__

#include "xe_global_variable.h"

SK_API void cc_printf_buffer(UINT8 *buf, UINT32 buflen, UINT8 *desc);

SK_API void cc_printf_sk_time(SK_TIME time, UINT8 *info);

#if 0
/*******************************************************************************
*函 数 名: bcd2int
*功  能: 将BCD码转成int型
*入  参: bcd: 待转换的BCD码
*       len: 待转换的字符串长度
*返 回 值: 转换后得到的十进制数值
*
*时  间:2016年12月12日
********************************************************************************
*/
UINT32 bcd2int(UINT8 *bcd, UINT32 len);

/*******************************************************************************
*函 数 名: int2bcd
*功  能: 将十进制int型数值转换成BCD码
*入  参: dec: 待转换的十进制数值
*       bcd: 转换后的BCD码
*       len: 待转换的字符串长度
*返 回 值: 0:转换成功
*
*时  间:2016年12月12日
********************************************************************************
*/
UINT32 int2bcd(int dec, UINT8 *bcd, UINT32 len);
#endif

/*******************************************************************************
*函 数 名: str2bcd
*功  能: 将str转换成BCD码
*入  参: src: 待转换的str字符串
*       dst: 转换后的BCD码
*       src_len: 待转换的字符串长度
*返 回 值: 1:  转换成功
*       -1: 转换失败
*
*时  间:2016年12月07日
********************************************************************************
*/
SK_API UINT32 str2bcd(const UINT8 *src, UINT8 *dst, UINT32 src_len);

/*******************************************************************************
*函 数 名: bcd2str
*功  能: 将BCD码转换成str
*入  参: bcd: 待转换的BCD码
*       bcd_len: BCD码长度
*       dst: 转换后的str
*       dst_buf_len: 转换后的字符串长度
*返 回 值: 1:  转换成功
*       -1: 转换失败
*
*时  间:2016年12月10日
********************************************************************************
*/
SK_API UINT32 bcd2str(UINT8 *bcd, UINT32 bcd_len, UINT8 *dst, UINT32 dst_buf_len);

INT32 set_system_time(const SK_TIME sk_time);

void get_current_time(SK_TIME *p_time);

UINT32 sys_get_tick_count();

/*******************************************************************************
*函 数 名: calc_check_sum
*功  能: 计算校验和，一帧的数据相累加和对256取模的余数
*入  参: src: 数据开始地址
*       len: 数据长度
*返 回 值: 计算得到的校验和
*
*时  间:2016年12月07日
********************************************************************************
*/
UINT8 calc_check_sum(const UINT8 *src, UINT32 len);

#endif
